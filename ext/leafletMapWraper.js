// Generated by CoffeeScript 1.12.1
(function() {
  var LeafletMap, myMap;

  LeafletMap = (function() {
    var reverseLatLng, reverseLngLat;

    reverseLngLat = function(lngLat) {
      return [lngLat[1], lngLat[0]];
    };

    reverseLatLng = function(latLng) {
      return [latLng[1], latLng[0]];
    };

    function LeafletMap() {
      var map, osmLayer;
      map = L.map('leaflet-map-container', {
        closePopupOnClick: false
      });
      osmLayer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: "Map data Â© <a href=\"http://openstreetmap.org\">\nOpenStreetMap</a>\ncontributors'"
      });
      map.setView(new L.LatLng(23.652186, 120.978075), 7);
      map.addLayer(osmLayer);
      this.map = map;
    }

    LeafletMap.prototype.createPoint = function(image) {
      var marker;
      marker = L.marker(reverseLngLat(image.exif.gps), {
        draggable: true,
        riseOnHover: true
      });
      marker.bindPopup(image.toHTMLNode(), {
        autoClose: false
      });
      marker.on('dragend', function(distance) {
        var latLng;
        latLng = this.getLatLng();
        image.exif.gps = [latLng.lng, latLng.lat];
        image.exif.update();
        this.setPopupContent(image.toHTMLNode());
        return this.openPopup();
      });
      return marker;
    };

    LeafletMap.prototype.showPoint = function(image) {
      return image.mapPoint.addTo(this.map).openPopup();
    };

    LeafletMap.prototype.movePoint = function(image, lngLatArray) {
      return image.mapPoint.setLatLng(reverseLngLat(lngLatArray));
    };

    LeafletMap.prototype.removePoint = function(image) {
      if (image.mapPoint) {
        return image.mapPoint.remove();
      }
    };

    return LeafletMap;

  })();

  myMap = new LeafletMap();

  spexif.myMap = myMap;

}).call(this);

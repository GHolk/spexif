// Generated by CoffeeScript 1.12.1
(function() {
  var LeafletMap, myMap;

  LeafletMap = (function() {
    var reverseLatLng, reverseLngLat;

    reverseLngLat = function(lngLat) {
      return [lngLat[1], lngLat[0]];
    };

    reverseLatLng = function(latLng) {
      return [latLng[1], latLng[0]];
    };

    function LeafletMap() {
      var map, osmLayer;
      map = L.map('leaflet-map-container', {
        closePopupOnClick: false
      });
      osmLayer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: "Map data Â© <a href=\"http://openstreetmap.org\">\nOpenStreetMap</a>\ncontributors'"
      });
      map.setView(new L.LatLng(23.652186, 120.978075), 7);
      map.addLayer(osmLayer);
      this.map = map;
    }

    LeafletMap.prototype.createPoint = function(image) {
      var marker;
      marker = L.marker(reverseLngLat(image.exif.gps), {
        draggable: true,
        riseOnHover: true
      });
      marker.bindPopup(image.HTMLNode, {
        autoClose: false
      });
      marker.on('dragend', function(distance) {
        var latLng;
        latLng = this.getLatLng();
        image.exif.gps = [latLng.lng, latLng.lat];
        image.exif.update();
        image.updateHTMLNode();
        this.setPopupContent(image.HTMLNode);
        return this.openPopup();
      });
      return marker;
    };

    LeafletMap.prototype.showPoint = function(image) {
      return image.mapPoint.addTo(this.map).openPopup();
    };

    LeafletMap.prototype.movePoint = function(image, lngLatArray) {
      return image.mapPoint.setLatLng(reverseLngLat(lngLatArray));
    };

    LeafletMap.prototype.removePoint = function(image) {
      if (image.mapPoint) {
        return image.mapPoint.remove();
      }
    };

    LeafletMap.prototype.updateInfoWindow = function(image) {
      return image.mapPoint.setPopupContent(image.HTMLNode);
    };

    LeafletMap.prototype.distanceBetweenPoint = function(gps1, gps2) {
      return this.map.distance(gps1, gps2);
    };

    LeafletMap.prototype.drawCircle = function(callback) {
      return this.map.once('click', (function(_this) {
        return function(evt) {
          var circle, whenMove;
          circle = L.circle(evt.latlng);
          circle.addTo(_this.map);
          whenMove = function(evt) {
            var radius;
            radius = _this.distanceBetweenPoint(circle.getLatLng(), evt.latlng);
            return circle.setRadius(radius);
          };
          _this.map.on('mousemove', whenMove);
          return _this.map.once('click', function(evt) {
            var gps, latlng, radius;
            _this.map.off('mousemove', whenMove);
            whenMove(evt);
            latlng = circle.getLatLng();
            gps = [latlng.lng, latlng.lat];
            radius = circle.getRadius();
            setTimeout((function() {
              return circle.remove();
            }), 10000);
            return callback(gps, radius);
          });
        };
      })(this));
    };

    return LeafletMap;

  })();

  myMap = new LeafletMap();

  spexif.myMap = myMap;

}).call(this);

// Generated by CoffeeScript 1.12.7
(function() {
  var Speaker;

  Speaker = (function() {
    function Speaker(shower) {
      this.debuger = shower.debuger;
      this.boardNode = shower.boardNode;
      this.boardNode.querySelector('iframe').addEventListener('load', (function(_this) {
        return function(loadEvent) {
          if (loadEvent.target.contentWindow.location.href !== 'about:blank') {
            return _this.showWindow(true);
          }
        };
      })(this));
      this.boardNode.querySelector('button').addEventListener('click', (function(_this) {
        return function() {
          return _this.showWindow(false);
        };
      })(this));
    }

    Speaker.prototype.errorTemplate = document.getElementById('template').getElementsByClassName('error-log')[0];

    Speaker.prototype.logTemplate = document.getElementById('template').getElementsByClassName('normal-log')[0];

    Speaker.prototype.errorFriendly = function(err) {
      var node;
      node = this.errorTemplate.cloneNode();
      node.textContent = err;
      this.showWindow(false);
      this.boardNode.appendChild(node);
      this.debuger.error(err);
      return err;
    };

    Speaker.prototype.logFriendly = function(log) {
      var node;
      node = this.logTemplate.cloneNode();
      node.textContent = log;
      this.showWindow(false);
      return this.boardNode.appendChild(node);
    };

    Speaker.prototype.showWindow = function(bool) {
      if (bool) {
        return this.boardNode.classList.add('show-window');
      } else {
        return this.boardNode.classList.remove('show-window');
      }
    };

    Speaker.prototype.error = function(err) {
      return this.debuger.error(err);
    };

    Speaker.prototype.log = function(lg) {
      return this.debuger.log(lg);
    };

    return Speaker;

  })();

  spexif.speaker = new Speaker({
    debuger: window.console,
    boardNode: document.querySelector('#error-board')
  });

}).call(this);
